[{"path":"https://dsci-310-2025.github.io/predictdiabetes/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Code of Conduct","title":"Code of Conduct","text":"make clear expected, everyone participating project required conform Group 6’s Code Conduct. committed fostering open, inclusive, respectful environment participants project. welcome individuals backgrounds dedicated promoting culture diversity, equity, inclusion. believe diversity inclusivity leads stronger, effective teamwork members feel safe, valued, empowered contribute. members, contributors, leaders tolerate discrimination harassment kind pledge make participation community safe healthy experience. members Group 6 project team expected assist enforcement Code Conduct. reports reviewed team kept strictly confidential.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Code of Conduct","text":"Code Conduct applies spaces managed Group 6 including, limited , group meetings, email communication, pull request feedback, discussion boards (e.g. Github issues), social media, private messaging applications (e.g. Instagram) events Group 6 represented.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CODE_OF_CONDUCT.html","id":"a-statement-on-diversity-and-inclusivity","dir":"","previous_headings":"","what":"A Statement on diversity and inclusivity","title":"Code of Conduct","text":"dedicated providing welcoming supportive environment people, regardless background identity. tolerate discrimination harassment based characteristics include, limited , age, body size, visible invisible disability, level experience, education, socio-economic status, familial status, nationality, race, ethnicity, religion belief (lack thereof), personal appearance, genetic information sexual identity orientation.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CODE_OF_CONDUCT.html","id":"expected-behaviour","dir":"","previous_headings":"","what":"Expected behaviour","title":"Code of Conduct","text":"participants events communications expected show respect courtesy others. interactions strive professional regardless platform: either online -person. Examples behaviour contributes positive environment community include: Using welcoming inclusive language Treating everyone equal respect open differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Maintaining confidentiality reports harassment violations Code Conduct Acknowledging celebrating diversity forms","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CODE_OF_CONDUCT.html","id":"unacceptable-behaviour","dir":"","previous_headings":"","what":"Unacceptable behaviour","title":"Code of Conduct","text":"Examples unacceptable behavior participants platform event Group 6 represented include: Discriminatory, offensive, harmful language effect excluding people basis membership specific group Bullying intimidation kind, including limited physical verbal abuse, unwelcome attention, stalking Incitement violence, suicide, self-harm, causing someone fear safety Deliberately undermining contributions participants belittling work display sexual violent images Intentional repeated misgendering Microaggressions, whether intentional unintentional Sustained disruption meetings, events communications Excessive intoxication Nonconsensual physical contact Continuing initiate interaction (including photography recording) someone asked stop publication private communication without consent","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CODE_OF_CONDUCT.html","id":"consequences-for-unacceptable-behaviour","dir":"","previous_headings":"","what":"Consequences for unacceptable behaviour","title":"Code of Conduct","text":"Participants asked stop inappropriate behavior expected comply immediately. applies platform event Group 6 represented, either online -person. participant engages behavior violates Code Conduct, team may warn offender engage DSCI 310 Instructor investigate Code Conduct violation impose appropriate sanctions. Consequences may include temporary permanent removal project, bans project’s communication channels (e.g. Github issues, emails, private messaging applications, etc.), reports appropriate authorities cases legal violations.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CODE_OF_CONDUCT.html","id":"reporting-and-dealing-with-unacceptable-behaviour","dir":"","previous_headings":"","what":"Reporting and dealing with unacceptable behaviour","title":"Code of Conduct","text":"someone violates Code Conduct platform event Group 6 represented, either online -person, encourage report promptly members Group 6. current members Group 6 : Nicholas Tam, email : tsunlinicholastam[--]gmail.com Dua Khan, email : duakhan931[--]gmail.com Kaylee Li, email : lkyle888888[--]gmail.com Luke Huang, email : lukehmtn[--]gmail.com Contact email seen respective member listed . reports reviewed team respond way deem appropriate circumstances. Based severity violation, Instructor DSCI 310 may involved.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html Vox Media Coc available https://code--conduct.voxmedia.com/","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributions","title":"Contributions","text":"welcome contributions project! notice bug, feature request, please open issue . ’d like contribute feature bug fix, can fork clone repo submit pull request. -depth instructions, see . review pull requests within 7 days. contributors must abide code conduct.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to Contribute","title":"Contributions","text":"Clone repository terminal Change working directory project folder Create new branch switch IMPORTANT: Branches must follow format <username>-<task_description>-<step_num> derived either main existing branch edit . Example good branch name: jane_doe-create-bar-plot-function-m3 Remember regularly pull changes origin main branch local main branch. ’re fixing bug adding feature, sure : Ensure changes break existing functionality Follow existing coding style guidelines project. applicable, add tests ensure functionality works expected. Update documentation, necessary (README.md, etc.). changes complete, commit descriptive message Push changes","code":"git clone https://github.com/DSCI-310-2025/predictdiabetes.git cd predictdiabetes git checkout -b <username>-<task_description>-<step_num> git push origin <branch-name>"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull Requests","title":"Contributions","text":"Add information extended decription necessary. Resolve merge conflicts pop Merge Editor VSCode; recklessly combine versions file together. Warning: .ipynb files work Merge Editor VSCode; please outline Google Docs first committing. pull request open, project maintainers review . may suggest changes improvements. open feedback ready make additional commits necessary. pull request reviewed, feel free merge commit main. Thank contribution!","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CONTRIBUTING.html","id":"reporting-issues-and-seeking-support","dir":"","previous_headings":"","what":"Reporting Issues and Seeking Support","title":"Contributions","text":"information seeking support, please see code conduct. Go “Issues” tab GitHub. Click “New issue”. Provide reasonably descriptive title elaborate description. necessary, provide additional sub-issues corresponding details concrete steps complete. issue/sub-issue completed, remember close .","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/CONTRIBUTING.html","id":"external-documentation","dir":"","previous_headings":"","what":"External Documentation","title":"Contributions","text":"README.md Code Conduct MIT License Creative Commons License","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/LICENSE-MIT.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 predictdiabetes authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"predictdiabetes package provides tools binary classification tasks, including: - Exploratory Data Analysis (EDA): Visualizations statistical tests - Feature Selection: Identifying important predictors - Modeling: Logistic regression pipeline automated tuning vignette demonstrates workflow using iris dataset, : 1.Convert Sepal.Length, Sepal.Width, Petal.Length, Petal.Width categorical predictors, add noise dataset (Noise1 Noise2) won’t perfect metrics (since dataset quite small). 2. Use Species binary target (setosa vs. others)","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"data-preparation","dir":"Articles","previous_headings":"Introduction","what":"Data Preparation","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"Firstly, modified original iris dataset behind scenes: transformed numeric predictors categorical values added noise make task challenging. Additionally, introduced synthetic data increase sample size. Lets get glipse processed iris dataframe. Next, lets split dataframe training test set.","code":"# head of the transformed iris dataset we will play with that has also been upsampled. head(iris_processed, n = 5) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species Noise1   Noise2 #> 1          Low      Medium          Low         Low  setosa   Blue   Circle #> 2          Low      Medium          Low         Low  setosa   Blue Triangle #> 3          Low      Medium          Low         Low  setosa   Blue   Square #> 4          Low      Medium          Low         Low  setosa  Green   Circle #> 5          Low      Medium          Low         Low  setosa   Blue Triangle # Split into training (75%) and testing (25%) sets set.seed(123) split <- initial_split(iris_processed, prop = 0.75, strata = \"Species\") train_data <- training(split) test_data <- testing(split)  head(train_data, n = 3) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species Noise1   Noise2 #> 1         High      Medium       Medium      Medium   other    Red Triangle #> 2          Low         Low       Medium      Medium   other    Red   Square #> 3       Medium         Low       Medium      Medium   other  Green Triangle"},{"path":[]},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"target-variable-distribution","dir":"Articles","previous_headings":"Introduction > Exploratory Data Analysis (EDA)","what":"1. Target Variable Distribution","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"Check distribution binary target variable (Species) using category_target() assess class imbalance. Interpretation: use rule thumb dataset considered imbalanced minority class represents less 10–20% data. Based , dataset slightly imbalanced (45% Setosa, 54% ). proceed slightly imbalanced dataset without applying balancing techniques.","code":"category_target(train_data, Species) #> # A tibble: 2 × 3 #>   Species Count Proportion #>   <fct>   <int>      <dbl> #> 1 other     220      0.588 #> 2 setosa    154      0.412"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"na-summary","dir":"Articles","previous_headings":"Introduction > Exploratory Data Analysis (EDA)","what":"2. NA Summary","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"Use na_count_type() identify missing values data types. Interpretation: missing values detected columns. Yay! need drop rows.","code":"na_count_type(train_data) #>                   Sepal.Length Sepal.Width Petal.Length Petal.Width Species   #> NA_Count          \"0\"          \"0\"         \"0\"          \"0\"         \"0\"       #> Distinct_Count    \"3\"          \"3\"         \"3\"          \"3\"         \"2\"       #> Current_Data_Type \"integer\"    \"integer\"   \"integer\"    \"integer\"   \"integer\" #>                   Noise1    Noise2    #> NA_Count          \"0\"       \"0\"       #> Distinct_Count    \"3\"       \"3\"       #> Current_Data_Type \"integer\" \"integer\""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"bar-plots-of-predictors-vs--target","dir":"Articles","previous_headings":"Introduction > Exploratory Data Analysis (EDA)","what":"3. Bar Plots of Predictors vs. Target","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"categorical_bars() plot_grid() together makes easy visualize relationship predictor ’s target variable. case, species target.  Key Insight: Petal.Length Petal.Width better separation classes (potential strong predictors) compare variables.","code":"# this create a list of bar_plots bar_plots <- categorical_bars(   data_frame = train_data,   cat_vars = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\", \"Noise1\", \"Noise2\"),   target_col = \"Species\",   title_size = 12,   axis_size = 10 )  # Display plots in a 2x2 grid plots_grid(bar_plots, num_cols = 2)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"statistical-association-tests","dir":"Articles","previous_headings":"Introduction > Exploratory Data Analysis (EDA)","what":"4. Statistical Association Tests","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"Use cramer_chi_results() compute Cramér’s V chi-squared p-values quantify predictor-target relationships Key insight: results indicate Petal.Length Sepal.Width statistically significant associations target variable, suggesting valuable predictors classification. hand, Noise1 Noise2 show weak associations, making less useful predicting target.","code":"cramer_chi_results(   df = train_data,   categorical_vars = c(\"Sepal.Length\", \"Sepal.Width\", \"Petal.Length\", \"Petal.Width\", \"Noise1\", \"Noise2\"),   target_col = \"Species\" ) #> # A tibble: 6 × 7 #>   Variable     Statistic    DF       p_value Expected_Min Expected_Max CramersV #>   <chr>            <dbl> <int>         <dbl>        <dbl>        <dbl>    <dbl> #> 1 Petal.Width     39.5       2 0.00000000261         46.5         77.6   0.325  #> 2 Petal.Length    29.7       2 0.000000356           45.3         78.2   0.282  #> 3 Sepal.Length    24.1       2 0.00000590            38.3         90     0.254  #> 4 Sepal.Width      8.33      2 0.0155                42.8         88.8   0.149  #> 5 Noise2           1.46      2 0.482                 45.7         78.2   0.0625 #> 6 Noise1           0.419     2 0.811                 44.5         81.2   0.0335"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"feature-importance-via-information-gain","dir":"Articles","previous_headings":"Introduction > Exploratory Data Analysis (EDA)","what":"5. Feature Importance via Information Gain","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"Identify informative predictors using info_gain(). Key insight: information gain values show Petal.Width provides information predicting target variable. Noise2 contributes little prediction task, suggesting dropped model.","code":"# Compute information gain with respect to 'am' info_gain(train_data, Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width + Noise1 + Noise2) #>       Variable Information_Gain #> 1  Petal.Width     0.0527502547 #> 2 Petal.Length     0.0402172941 #> 3 Sepal.Length     0.0325058489 #> 4  Sepal.Width     0.0112076589 #> 5       Noise2     0.0019446700 #> 6       Noise1     0.0005608722 # drop Noise2 as it contribute to the model very little train_data <- train_data %>%   select(-Noise2)"},{"path":[]},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"logistic-regression-pipeline","dir":"Articles","previous_headings":"Introduction > Modeling","what":"Logistic Regression Pipeline","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"use lr_pipeline() function automates logistic regression training, tuning, model saving.","code":"model_workflow <- lr_pipeline(   data = train_data,   target_col = \"Species\",   vfolds = 2,   grid_size = 1,   tuning_metric = \"recall\",   output_path = tempfile(fileext = \".rds\")  # this is a temporary path, in an actual project, use the actual path )"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"lasso-classification-model-coefficients","dir":"Articles","previous_headings":"Introduction > Modeling > Logistic Regression Pipeline","what":"LASSO Classification Model Coefficients","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"Visualize coefficients logistic regression model using coeff_plot() Interpretation: can see Petal.Width_Low Petal.Length_Medium largest coefficients—positive negative, respectively.","code":"coeff_plot(model_workflow)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"evaluation-on-test-set","dir":"Articles","previous_headings":"Introduction","what":"Evaluation on Test Set","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"Generate predictions probabilities test set:","code":"lasso_modelOutputs <- test_data %>%   mutate(across(everything(), as.factor)) %>%   cbind(model_workflow %>% predict(test_data),         model_workflow %>% predict(test_data, type = \"prob\")) %>%   mutate(Species = as.factor(Species))  head(lasso_modelOutputs) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species Noise1   Noise2 #> 1          Low      Medium          Low         Low  setosa   Blue   Circle #> 2          Low      Medium          Low         Low  setosa  Green Triangle #> 3          Low      Medium          Low         Low  setosa  Green Triangle #> 4          Low        High          Low         Low  setosa   Blue   Circle #> 5          Low      Medium          Low         Low  setosa    Red Triangle #> 6          Low      Medium          Low         Low  setosa   Blue   Square #>   .pred_class .pred_other .pred_setosa #> 1      setosa   0.2583379    0.7416621 #> 2      setosa   0.2247421    0.7752579 #> 3      setosa   0.2247421    0.7752579 #> 4      setosa   0.2129364    0.7870636 #> 5      setosa   0.2583379    0.7416621 #> 6      setosa   0.2583379    0.7416621"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"performance-metrics","dir":"Articles","previous_headings":"Introduction > Evaluation on Test Set","what":"Performance Metrics","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"Calculate ROC AUC evaluate model performance plot ROC curve using roc_plot() Interpretation: can see plot model achieved AUC 0.745, fairly modest. result expected since intentionally added noise dataset dataset still relatively small.","code":"# Calculate roc metrics roc_metric <- roc_auc(   lasso_modelOutputs,   truth = Species,   .pred_setosa,   event_level = \"second\" )  plot_path1 <- tempfile(fileext = \".png\")  roc_plot <- roc_plot(model_outputs = lasso_modelOutputs,                      true_class = \"Species\",                      predicted_probs = \".pred_setosa\",                      roc_auc_value = roc_metric$.estimate,                      output_path = plot_path1)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"confusion-matrix","dir":"Articles","previous_headings":"Introduction > Evaluation on Test Set > Performance Metrics","what":"Confusion Matrix","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"Plot confusion matrix using cm_plot() assess model performance:  Interpretation: confusion matrix shows model correctly classified 26 setosa 60 samples, also misclassified 26 setosa 14 setosa. indicates model struggles distinguishing setosa , particularly overpredicting class.","code":"# Confusion matrix  plot_path2 <- tempfile(fileext = \".png\")  cm_df <- conf_mat(lasso_modelOutputs, truth = Species, estimate = .pred_class, event_level = \"second\")$table |>    as.data.frame() %>%   cm_plot(plot_path2)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"predictdiabetes Vignette: Classification with Iris Dataset","text":"predictdiabetes package simplifies key steps binary classification, EDA preprocessing model training evaluation. vignette demonstrates capabilities using Iris dataset, package can extended real-world classification tasks like diabetes prediction.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"dkln klht. Author, maintainer.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"klht d (2025). predictdiabetes: Package (One Line, Title Case). R package version 0.0.0.9000, https://dsci-310-2025.github.io/predictdiabetes/.","code":"@Manual{,   title = {predictdiabetes: What the Package Does (One Line, Title Case)},   author = {dkln klht},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://dsci-310-2025.github.io/predictdiabetes/}, }"},{"path":[]},{"path":"https://dsci-310-2025.github.io/predictdiabetes/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"What the Package Does (One Line, Title Case)","text":"goal predictdiabetes provide functions useful developing logistic regression models. package orginally designed logistic regression prediction model diabetes risk based BRFSS health indicators, package designed applicable models. package situated within R ecosystem complements existing modeling packages caret, glmnet, tidymodels. frameworks offer comprehensive pipelines model training tuning, predictdiabetes focuses specifically exploratory data analysis, feature selection, visualization techniques tailored binary classification using logistic regression. Compared broader machine learning packages, predictdiabetes offers streamlined approach building evaluating logistic regression models, built-plots helper functions reduce need boilerplate code.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"What the Package Does (One Line, Title Case)","text":"na_count_type: Given input data frame, check number missing values (NA), number distinct values, data type variable. category_target: Given input dataframe categorical variable, return number proportion instances category value, alphabetical (characters logical) numerical (integers) order categorical_bars: Create list bar plots categorical variable data frame. info_gain: Calculate sort information gain feature selection. plots_grid: Combine list mulitple lists ggplot2 objects single grid layout using patchwork. number columns grid can specified num_cols. cramer_chi_results: Runs chi-squared tests calculates Cramer’s V independently variable given data frame. lr_pipeline: Trains fits logistic regression model cross-validates optimal hyperparameter values. roc_plot: Creates ROC curve plot saves specified file path. cm_plot: Creates confusion matrix plot saves specified file path. coeff_plot: Plot LASSO classification model coefficients.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version predictdiabetes GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"DSCI-310-2025/predictdiabetes\")"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"Begin EDA checking number NAs, number distinct values data type column. building model, likely want understand proportions binary variable interest within category categorical variables. predictdiabetes::categorical_bars() can used provide plots every provided categorical variable.  building LASSO model, ROC plots beneficial evaluate model perform.","code":"library(predictdiabetes)  na_count_type(mtcars) #>                   mpg      cyl       disp     hp       drat     wt       #> NA_Count          \"0\"      \"0\"       \"0\"      \"0\"      \"0\"      \"0\"      #> Distinct_Count    \"25\"     \"3\"       \"27\"     \"22\"     \"22\"     \"29\"     #> Current_Data_Type \"double\" \"integer\" \"double\" \"double\" \"double\" \"double\" #>                   qsec     vs       am        gear      carb     #> NA_Count          \"0\"      \"0\"      \"0\"       \"0\"       \"0\"      #> Distinct_Count    \"30\"     \"2\"      \"2\"       \"3\"       \"6\"      #> Current_Data_Type \"double\" \"double\" \"integer\" \"integer\" \"double\" #>                   mpg      cyl      disp     hp       drat     wt       #> NA_Count          \"0\"      \"0\"      \"0\"      \"0\"      \"0\"      \"0\"      #> Distinct_Count    \"25\"     \"3\"      \"27\"     \"22\"     \"22\"     \"29\"     #> Current_Data_Type \"double\" \"double\" \"double\" \"double\" \"double\" \"double\" #>                   qsec     vs       am       gear     carb     #> NA_Count          \"0\"      \"0\"      \"0\"      \"0\"      \"0\"      #> Distinct_Count    \"30\"     \"2\"      \"2\"      \"3\"      \"6\"      #> Current_Data_Type \"double\" \"double\" \"double\" \"double\" \"double\" # Generate bar plots for categorical variables from the mtcars dataset mtcars$cyl <- as.factor(mtcars$cyl) mtcars$gear <- as.factor(mtcars$gear) mtcars$am   <- as.factor(mtcars$am)  bar_plots <- categorical_bars(   data_frame = mtcars,   cat_vars = c(\"cyl\", \"gear\"),   target_col = \"am\",   title_size = 15,   axis_size = 20 )  ## Display one of the bar plots, e.g., for cyl: (bar_plots[[\"cyl\"]]) set.seed(42)  conf_matrix_df <- data.frame(   Prediction = c(\"Positive\", \"Negative\", \"Positive\", \"Negative\"),   Truth = c(\"Positive\", \"Positive\", \"Negative\", \"Negative\"),   Freq = c(50, 10, 5, 100) ) plot <- cm_plot(conf_matrix_df, tempfile(fileext = \".png\"))  plot(plot)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Bar Plots — categorical_bars","title":"List of Bar Plots — categorical_bars","text":"Create list bar plots categorical variable data frame. proportions categorical variable grouped different fill color.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Bar Plots — categorical_bars","text":"","code":"categorical_bars(   data_frame,   cat_vars,   target_col,   title_size = 30,   axis_size = 35,   legend_key_size = 1,   legend_text_size = 12,   legend_title_size = 12 )"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Bar Plots — categorical_bars","text":"data_frame data frame data frame extension (e.g. tibble). cat_vars vector containing string name(s) categorical variable plot x-axis. target_col Column interest plot variable (object). title_size Size plot's title (Default = 30). axis_size Size plot's axes (Default = 35). legend_key_size Size legend key (Default = 1 cm). legend_text_size Size legend text (Default = 12). legend_title_size Size legend title (Default = 12).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Bar Plots — categorical_bars","text":"list containing ggplot2 object(s) (bar plots).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Bar Plots — categorical_bars","text":"","code":"if (FALSE) { # \\dontrun{   # Generate bar plots for categorical variables from the mtcars dataset   bar_plots <- categorical_bars(     data_frame = mtcars,     cat_vars = c(\"cyl\", \"gear\"),     target_col = \"am\",     title_size = 25,     axis_size = 20,     legend_key_size = 1.5,     legend_text_size = 14,     legend_title_size = 14   )   # Display the first bar plot   print(bar_plots[[\"cyl\"]]) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts and Proportions of Categorical Variables — category_target","title":"Counts and Proportions of Categorical Variables — category_target","text":"Given input dataframe categorical variable, return number proportion instances category value, alphabetical (characters logical) numerical (integers) order","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts and Proportions of Categorical Variables — category_target","text":"","code":"category_target(data_frame, cat_var)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counts and Proportions of Categorical Variables — category_target","text":"data_frame data frame data frame extension (e.g. tibble). cat_var categorical variable (object) within data_frame.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counts and Proportions of Categorical Variables — category_target","text":"data frame 1 rows per category 2 columns: Count: Number occurrances category cat_var. Proportion: Proportion category relative total number rows data frame.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Counts and Proportions of Categorical Variables — category_target","text":"","code":"if (FALSE) { # \\dontrun{   category_target(ToothGrowth, ToothGrowth$supp) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cm_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and save a confusion matrix plot — cm_plot","title":"Create and save a confusion matrix plot — cm_plot","text":"function creates confusion matrix plot saves specified file path.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cm_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and save a confusion matrix plot — cm_plot","text":"","code":"cm_plot(conf_matrix_df, output_path)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cm_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and save a confusion matrix plot — cm_plot","text":"conf_matrix_df data frame tibble containing confusion matrix results. columns \"Prediction\", \"Truth\" \"Freq\". output_path character string specifying file path save confusion matrix plot.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cm_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and save a confusion matrix plot — cm_plot","text":"ggplot2 object displaying tile heatmap confusion matrix.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cm_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and save a confusion matrix plot — cm_plot","text":"","code":"# Example usage: if (FALSE) { # \\dontrun{ # Assuming you have a confusion matrix object from yardstick::conf_mat cm_plot(cm, \"confusion_matrix_plot.png\") } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/coeff_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LASSO Classification Model Coefficients — coeff_plot","title":"Plot LASSO Classification Model Coefficients — coeff_plot","text":"function extracts coefficients fitted LASSO classification model contained within workflow object, arranges importance, creates bar plot visualize coefficients.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/coeff_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LASSO Classification Model Coefficients — coeff_plot","text":"","code":"coeff_plot(model)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/coeff_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LASSO Classification Model Coefficients — coeff_plot","text":"model workflow object containing trained LASSO model.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/coeff_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LASSO Classification Model Coefficients — coeff_plot","text":"ggplot object visualizes LASSO model coefficients bar plot.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/coeff_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot LASSO Classification Model Coefficients — coeff_plot","text":"","code":"# Assuming you have a trained workflow named 'lasso_model' if (FALSE) { # \\dontrun{ coeff_plot(lasso_model) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cramer_chi_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of Chi-Squared Test and Cramer's V Results — cramer_chi_results","title":"Table of Chi-Squared Test and Cramer's V Results — cramer_chi_results","text":"Runs chi-squared tests calculates Cramer's V independently variable given data frame","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cramer_chi_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of Chi-Squared Test and Cramer's V Results — cramer_chi_results","text":"","code":"cramer_chi_results(df, categorical_vars, target_col)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cramer_chi_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table of Chi-Squared Test and Cramer's V Results — cramer_chi_results","text":"df data frame data frame extension (e.g. tibble). categorical_vars vector containing string name(s) categorical variable data frame. target_col string specifying categorical variable chi-squared tests performed.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cramer_chi_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table of Chi-Squared Test and Cramer's V Results — cramer_chi_results","text":"Data frame 1 row per variable 7 columns: Variable: Name categorical variable. Statistic: Chi-squared test statistic. DF: Degrees freedom. p_value: p-value chi-squared test. Expected_Min: Minimum expected value. Expected_Max: Maximum expected value. CramersV: Cramer's V statistic.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/cramer_chi_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table of Chi-Squared Test and Cramer's V Results — cramer_chi_results","text":"","code":"if (FALSE) { # \\dontrun{   cramer_chi_results(mtcars, c(\"cyl\", \"gear\"), \"mpg\") } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/info_gain.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Sort Information Gain for Feature Selection — info_gain","title":"Calculate and Sort Information Gain for Feature Selection — info_gain","text":"function calculates information gain predictor respect target variable returns data frame sorted importance.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/info_gain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Sort Information Gain for Feature Selection — info_gain","text":"","code":"info_gain(data, formula)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/info_gain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Sort Information Gain for Feature Selection — info_gain","text":"data data frame containing predictors target variable. formula formula specifying target predictors (e.g., Diabetes_binary ~ .).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/info_gain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Sort Information Gain for Feature Selection — info_gain","text":"tibble two columns: Variable Information_Gain, sorted descending order.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/info_gain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Sort Information Gain for Feature Selection — info_gain","text":"","code":"if (FALSE) { # \\dontrun{ info_gain_table <- info_gain(mtcars, am ~ .) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic Regression Binary Classification Pipeline — lr_pipeline","title":"Logistic Regression Binary Classification Pipeline — lr_pipeline","text":"Trains fits logistic regression model cross-validates optimal hyperparameter values.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Regression Binary Classification Pipeline — lr_pipeline","text":"","code":"lr_pipeline(   data,   target_col,   vfolds = 5,   grid_size = 10,   tuning_metric,   output_path )"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic Regression Binary Classification Pipeline — lr_pipeline","text":"data data frame data frame extension (e.g. tibble). target_col string specifying variable interest. vfolds number specifying amount folds used k-fold cross-validation (Default = 5). grid_size number specifying penalty values test model tuning (Default = 10). tuning_metric string specifying metric used select optimal model (e.g. \"recall\"). output_path String path location save model RDS object.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic Regression Binary Classification Pipeline — lr_pipeline","text":"RDS file containing workflow object","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic Regression Binary Classification Pipeline — lr_pipeline","text":"","code":"if (FALSE) { # \\dontrun{   lr_pipeline(mtcars, \"am\", vfolds = 5, grid_size = 10, tuning_metric = \"recall\",   output_path = \"lasso_tuned_wflow.RDS\") } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Data Frame Columns — na_count_type","title":"Summarise Data Frame Columns — na_count_type","text":"Given input data frame, function checks number missing values (NA), number distinct values, data type variable.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Data Frame Columns — na_count_type","text":"","code":"na_count_type(data_frame)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Data Frame Columns — na_count_type","text":"data_frame data frame data frame extension (e.g. tibble).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Data Frame Columns — na_count_type","text":"Data frame 1 row per variable 3 columns: NA_Count: Number \"NA\" values within variable. Distinct_Count: Number distinct values variable. Current_Data_Type: Current data type variable.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Data Frame Columns — na_count_type","text":"","code":"if (FALSE) { # \\dontrun{   # Summarize columns in the mtcars dataset   na_count_type(mtcars) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid of Plots — plots_grid","title":"Grid of Plots — plots_grid","text":"Facet list ggplot2 bar plot objects single grid layout using patchwork. number columns grid can specified num_cols.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid of Plots — plots_grid","text":"","code":"plots_grid(bar_plots, num_cols = 3)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid of Plots — plots_grid","text":"bar_plots list ggplot2 bar plot objects. num_cols number columns grid (Default = 3).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid of Plots — plots_grid","text":"patchwork / ggplot2 object showing input plots arranged.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid of Plots — plots_grid","text":"","code":"if (FALSE) { # \\dontrun{   # Generate example bar plots   bar_plots <- categorical_bars(     data_frame = mtcars,     cat_vars = c(\"cyl\", \"gear\"),     target_col = \"am\"     )        # Combine plots into a grid   grid_plot <- plots_grid(bar_plots, num_cols = 2) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/roc_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates and saves an ROC curve plot — roc_plot","title":"Creates and saves an ROC curve plot — roc_plot","text":"function creates ROC curve plot given classification model saves specified file path.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/roc_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates and saves an ROC curve plot — roc_plot","text":"","code":"roc_plot(   model_outputs,   true_class,   predicted_probs,   roc_auc_value,   output_path )"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/roc_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates and saves an ROC curve plot — roc_plot","text":"model_outputs data frame tibble containing model outputs. true_class character string specifying column actual class labels. predicted_probs character string specifying column predicted probabilities. roc_auc_value numeric value representing AUC model evaluation. output_path character string specifying file path save ROC plot.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/roc_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates and saves an ROC curve plot — roc_plot","text":"ggplot2 object ROC curve.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/roc_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates and saves an ROC curve plot — roc_plot","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have model outputs, true labels, predicted probabilities, and AUC value roc_plot(lasso_model_outputs, \"Diabetes_binary\", \".pred_1\",          lasso_metrics$.estimate[lasso_metrics$.metric == \"roc_auc\"],          \"roc_curve_plot.png\") } # }"}]
