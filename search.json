[{"path":"https://dsci-310-2025.github.io/predictdiabetes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 predictdiabetes authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"function-definition","dir":"Articles","previous_headings":"","what":"Function Definition","title":"predictdiabetes-vignette","text":"","code":"quantitative_density <- function(data_frame, noncat_vars, target_col, title_size = 35, axis_size = 30) {   if (!target_col %in% colnames(data_frame)) {     stop(sprintf(\"Target column '%s' not found in data.\", target_col))   }    missing_vars <- setdiff(noncat_vars, colnames(data_frame))   if (length(missing_vars) > 0) {     stop(sprintf(\"The following vars are missing in data: %s\", paste(missing_vars, collapse = \", \")))   }    non_numeric <- noncat_vars[!sapply(data_frame[noncat_vars], is.numeric)]   if (length(non_numeric) > 0) {     stop(sprintf(\"The following vars are not numeric: %s\", paste(non_numeric, collapse = \", \")))   }    if (ncol(data_frame) == 0) {     stop(\"Data frame has no columns. Cannot plot an empty dataset.\")   }    density_plots <- list()   for (var in noncat_vars) {     p <- ggplot(data_frame, aes(x = !!sym(var), fill = as.factor(!!sym(target_col)))) +       geom_density(alpha = 0.5) +       scale_fill_manual(values = c(\"#FF9999\", \"#66B2FF\")) +       labs(         title = paste(target_col, \"by\", var),         x = var,         y = \"Density\",         fill = tools::toTitleCase(gsub(\"_\", \" \", target_col))       ) +       theme_minimal() +       theme(         axis.text = element_text(size = axis_size),         axis.title = element_text(size = axis_size),         plot.title = element_text(size = title_size, face = \"bold\"),         legend.key.size = unit(0.5, \"cm\"),         legend.text = element_text(size = 15),         legend.title = element_text(size = 20)       )     density_plots[[var]] <- p   }   return(density_plots) }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"generate-plots","dir":"Articles","previous_headings":"","what":"Generate Plots","title":"predictdiabetes-vignette","text":"","code":"density_plots <- quantitative_density(   data_frame = mtcars,   noncat_vars = c(\"mpg\", \"hp\", \"wt\"),   target_col = \"am\",   title_size = 20,   axis_size = 15 )"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/articles/predictdiabetes-vignette.html","id":"display-mpg-plot","dir":"Articles","previous_headings":"","what":"Display MPG Plot","title":"predictdiabetes-vignette","text":"## Display HP Plot","code":""},{"path":[]},{"path":"https://dsci-310-2025.github.io/predictdiabetes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). predictdiabetes: Package (One Line, Title Case). R package version 0.0.0.9000, https://dsci-310-2025.github.io/predictdiabetes/.","code":"@Manual{,   title = {predictdiabetes: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://dsci-310-2025.github.io/predictdiabetes/}, }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/index.html","id":"predictdiabetes","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal predictdiabetes …","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version predictdiabetes GitHub :","code":"# install.packages(\"pak\") pak::pak(\"DSCI-310-2025/predictdiabetes\")"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem:","code":"library(predictdiabetes) ## basic example code"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Bar Plots — categorical_bars","title":"List of Bar Plots — categorical_bars","text":"Create list bar plots categorical variable data frame. proportions categorical variable grouped different fill color.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Bar Plots — categorical_bars","text":"","code":"categorical_bars(   data_frame,   cat_vars,   target_col,   title_size = 30,   axis_size = 35 )"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Bar Plots — categorical_bars","text":"data_frame data frame data frame extension (e.g. tibble). cat_vars vector containing string name(s) categorical variable plot x-axis. target_col Column interest plot variable (object). title_size Size plot's title (Default = 30). axis_size Size plot's axes (Default = 35).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Bar Plots — categorical_bars","text":"list containing ggplot2 object(s) (bar plots).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/categorical_bars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Bar Plots — categorical_bars","text":"","code":"if (FALSE) { # \\dontrun{   # Generate bar plots for categorical variables from the mtcars dataset   bar_plots <- categorical_bars(     data_frame = mtcars,     cat_vars = c(\"cyl\", \"gear\"),     target_col = \"am\",     title_size = 25,     axis_size = 20   )   # Display the first bar plot   print(bar_plots[[\"cyl\"]]) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts and Proportions of Categorical Variables — category_target","title":"Counts and Proportions of Categorical Variables — category_target","text":"Given input dataframe categorical variable, return number proportion instances category value, alphabetical (characters logical) numerical (integers) order","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts and Proportions of Categorical Variables — category_target","text":"","code":"category_target(data_frame, cat_var)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counts and Proportions of Categorical Variables — category_target","text":"data_frame data frame data frame extension (e.g. tibble). cat_var categorical variable (object) within data_frame.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counts and Proportions of Categorical Variables — category_target","text":"data frame 1 rows per category 2 columns: Count: Number occurrances category cat_var. Proportion: Proportion category relative total number rows data frame.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/category_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Counts and Proportions of Categorical Variables — category_target","text":"","code":"if (FALSE) { # \\dontrun{   category_target(ToothGrowth, ToothGrowth$supp) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic Regression Pipeline — lr_pipeline","title":"Logistic Regression Pipeline — lr_pipeline","text":"Trains fits logistic regression model cross-validates optimal hyperparameter values","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Regression Pipeline — lr_pipeline","text":"","code":"lr_pipeline(   data,   target_col,   vfolds = 5,   grid_size = 10,   tuning_metric,   output_path )"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic Regression Pipeline — lr_pipeline","text":"data data frame data frame extension (e.g. tibble). target_col string specifying variable interest. vfolds number specifying amount folds used k-fold cross-validation (Default = 5). grid_size number specifying penalty values test model tuning (Default = 10). tuning_metric string specifying metric used select optimal model (e.g. \"recall\"). output_path String path location save model RDS object.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic Regression Pipeline — lr_pipeline","text":"RDS object","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/lr_pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic Regression Pipeline — lr_pipeline","text":"","code":"if (FALSE) { # \\dontrun{   lr_pipeline(mtcars, \"am\", vfolds = 5, grid_size = 10,   tuning_metric = \"recall\", output_path = \"lasso_tuned_wflow.RDS\") } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Data Frame Columns — na_count_type","title":"Summarise Data Frame Columns — na_count_type","text":"Given input data frame, function checks number missing values (NA), number distinct values, data type variable. NULL values treated column NA","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Data Frame Columns — na_count_type","text":"","code":"na_count_type(data_frame)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Data Frame Columns — na_count_type","text":"data_frame data frame data frame extension (e.g. tibble).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Data Frame Columns — na_count_type","text":"Data frame 1 row per variable 3 columns: NA_Count: Number \"NA\" values within variable. Distinct_Count: Number distinct values variable. Current_Data_Type: Current data type variable.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/na_count_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Data Frame Columns — na_count_type","text":"","code":"if (FALSE) { # \\dontrun{   # Summarize columns in the mtcars dataset   na_count_type(mtcars) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid of Plots — plots_grid","title":"Grid of Plots — plots_grid","text":"Combine list mulitple lists ggplot2 objects single grid layout using patchwork. number columns grid can specified num_cols.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid of Plots — plots_grid","text":"","code":"plots_grid(bar_plots, density_plots, num_cols = 3)"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid of Plots — plots_grid","text":"bar_plots list bar plot ggplot2 objects. density_plots list quantitative density plot ggplot2 objects. num_cols number columns grid (Default = 3).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid of Plots — plots_grid","text":"patchwork / ggplot2 object showing input plots arranged.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/plots_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid of Plots — plots_grid","text":"","code":"if (FALSE) { # \\dontrun{   # Generate example bar plots   bar_plots <- categorical_bars(     data_frame = mtcars,     cat_vars = c(\"cyl\", \"gear\"),     target_col = \"am\"   )   # Generate example density plots   density_plots <- quantitative_density(     data_frame = mtcars,     noncat_vars = c(\"mpg\", \"hp\", \"wt\"),     target_col = \"am\"   )   # Combine plots into a grid   grid_plot <- plots_grid(bar_plots, density_plots, num_cols = 2) } # }"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/quantitative_density.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Density Plots — quantitative_density","title":"List of Density Plots — quantitative_density","text":"Create list quantitative density plots non-categorical variable data frame. density area variable mapped different fill color.","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/quantitative_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Density Plots — quantitative_density","text":"","code":"quantitative_density(   data_frame,   noncat_vars,   target_col,   title_size = 35,   axis_size = 30 )"},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/quantitative_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Density Plots — quantitative_density","text":"data_frame data frame data frame extension (e.g. tibble). noncat_vars vector containing string name(s) non-categorical variable plot x-axis. target_col Column interest plot variable (object). title_size Size plot's title (Default = 35). axis_size Size plot's axes (Default = 30).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/quantitative_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Density Plots — quantitative_density","text":"list containing ggplot2 object(s) (density plots).","code":""},{"path":"https://dsci-310-2025.github.io/predictdiabetes/reference/quantitative_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Density Plots — quantitative_density","text":"","code":"if (FALSE) { # \\dontrun{   # Generate density plots for non-categorical variables from the mtcars dataset   density_plots <- quantitative_density(     data_frame = mtcars,     noncat_vars = c(\"mpg\", \"hp\", \"wt\"),     target_col = \"am\",     title_size = 25,     axis_size = 20   )   # Display the first density plot   print(density_plots[[\"mpg\"]]) } # }"}]
